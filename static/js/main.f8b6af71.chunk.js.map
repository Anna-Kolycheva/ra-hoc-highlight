{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["New","props","className","children","Popular","withHighlight","Component","views","UpgradedArticle","href","title","UpgradedVideo","src","url","frameBorder","allow","allowFullScreen","List","list","map","item","type","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAYA,SAASA,EAAIC,GACV,OACG,sBAAKC,UAAU,0BAAf,UACG,sBAAMA,UAAU,QAAhB,kBACCD,EAAME,YAKhB,SAASC,EAAQH,GACd,OACG,sBAAKC,UAAU,8BAAf,UACG,sBAAMA,UAAU,QAAhB,sBACCD,EAAME,YA8BhB,SAASE,EAAcC,GACpB,OAAO,SAAiBL,GAAQ,IACrBM,EAAUN,EAAVM,MACR,OAAIA,GAAS,IAEP,cAACP,EAAD,UACG,cAACM,EAAD,eAAeL,MAIpBM,GAAS,IAEP,cAACH,EAAD,UACG,cAACE,EAAD,eAAeL,MAIjB,cAACK,EAAD,eAAeL,KAI5B,IAAMO,EAAkBH,GA9CxB,SAAiBJ,GACd,OACG,sBAAKC,UAAU,oBAAf,UACG,6BACG,mBAAGO,KAAK,IAAR,SAAaR,EAAMS,UAEtB,oBAAGR,UAAU,QAAb,qEAAiCD,EAAMM,eAyC1CI,EAAgBN,GApCtB,SAAeJ,GACZ,OACG,sBAAKC,UAAU,kBAAf,UACG,wBACGU,IAAKX,EAAMY,IACXC,YAAY,IACZC,MAAM,4BACNC,iBAAe,IAElB,oBAAGd,UAAU,QAAb,2EAAkCD,EAAMM,eA6BjD,SAASU,EAAKhB,GACX,OAAOA,EAAMiB,KAAKC,KAAI,SAACC,GACpB,OAAQA,EAAKC,MACV,IAAK,QACF,OAAO,cAACV,EAAD,eAAmBS,IAE7B,IAAK,UACF,OAAO,cAACZ,EAAD,eAAqBY,QAKzB,SAASE,IAAO,IAAD,EACHC,mBAAS,CAC9B,CACGF,KAAM,QACNR,IAAK,gFACLN,MAAO,IAEV,CACGc,KAAM,QACNR,IAAK,gFACLN,MAAO,IAEV,CACGc,KAAM,UACNX,MAAO,wOACPH,MAAO,KAEV,CACGc,KAAM,UACNX,MAAO,yKACPH,MAAO,MAEV,CACGc,KAAM,QACNR,IAAK,gFACLN,MAAO,MAEV,CACGc,KAAM,UACNX,MAAO,uLACPH,MAAO,MA9Bc,mBACpBW,EADoB,UAkC3B,OAAO,cAACD,EAAD,CAAMC,KAAMA,IC7HtB,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAACb,EAAD,MAEHc,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.f8b6af71.chunk.js","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable default-case */\n/* eslint-disable jsx-a11y/iframe-has-title */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n\nimport React, { useState } from 'react';\n\nfunction New(props) {\n   return (\n      <div className=\"wrap-item wrap-item-new\">\n         <span className=\"label\">New!</span>\n         {props.children}\n      </div>\n   );\n}\n\nfunction Popular(props) {\n   return (\n      <div className=\"wrap-item wrap-item-popular\">\n         <span className=\"label\">Popular!</span>\n         {props.children}\n      </div>\n   );\n}\n\nfunction Article(props) {\n   return (\n      <div className=\"item item-article\">\n         <h3>\n            <a href=\"#\">{props.title}</a>\n         </h3>\n         <p className=\"views\">Прочтений: {props.views}</p>\n      </div>\n   );\n}\n\nfunction Video(props) {\n   return (\n      <div className=\"item item-video\">\n         <iframe\n            src={props.url}\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowFullScreen\n         />\n         <p className=\"views\">Просмотров: {props.views}</p>\n      </div>\n   );\n}\n\nfunction withHighlight(Component) {\n   return function Wrapper(props) {\n      const { views } = props;\n      if (views <= 100) {\n         return (\n            <New>\n               <Component {...props} />\n            </New>\n         );\n      }\n      if (views >= 1000) {\n         return (\n            <Popular>\n               <Component {...props} />\n            </Popular>\n         );\n      }\n      return <Component {...props} />;\n   };\n}\n\nconst UpgradedArticle = withHighlight(Article);\nconst UpgradedVideo = withHighlight(Video);\n\nfunction List(props) {\n   return props.list.map((item) => {\n      switch (item.type) {\n         case 'video':\n            return <UpgradedVideo {...item} />;\n\n         case 'article':\n            return <UpgradedArticle {...item} />;\n      }\n   });\n}\n\nexport default function App() {\n   const [list, setList] = useState([\n      {\n         type: 'video',\n         url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n         views: 50,\n      },\n      {\n         type: 'video',\n         url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n         views: 12,\n      },\n      {\n         type: 'article',\n         title: 'Невероятные события в неизвестном поселке...',\n         views: 175,\n      },\n      {\n         type: 'article',\n         title: 'Секретные данные были раскрыты!',\n         views: 1532,\n      },\n      {\n         type: 'video',\n         url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n         views: 4253,\n      },\n      {\n         type: 'article',\n         title: 'Кот Бегемот обладает невероятной...',\n         views: 12,\n      },\n   ]);\n\n   return <List list={list} />;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}